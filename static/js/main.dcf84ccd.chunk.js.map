{"version":3,"sources":["components/Card.js","components/Buttons.js","components/Container.js","Assets/Image/logo.png","Routes/Main.js","Assets/data/2017_data.csv","Assets/data/2018_data.csv","Assets/data/2019_data.csv","Routes/Data.js","Assets/data/All_data.csv","Routes/DV1.js","Routes/DV2.js","App.js","index.js"],"names":["StyledCard","styled","span","props","width","height","dp","fd","po","fontSize","margin_left","Card","children","StyledButton","button","long","thick","marginTop","marginBottom","marginLeft","marginRight","paddingTop","paddingBottom","paddingLeft","paddingRight","fs","primary","secondary","color","bg","Button","StyledContainer","jc","Main","src","Logo","alt","StyledRow1","div","StyledRow2","StyledRow3","Data","useState","isLoaded","setIsLoaded","Rows","setRows","year","setYear","useEffect","d3","data2017","data","index","see","gungoo","lat","lng","bob","push","then","data2018","data2019","onClick","Dv1","tuples","Number","dataAll","load_data","remove","centered","projection","scale","translate","path","geojson","topojson","koreaMap","objects","seoul_municipalities_geo","svg","append","attr","feature","circles","labels","bounds","widthScale","heightScale","Math","max","offset","selectAll","features","enter","d","centroid","text","properties","SIG_KOR_NM","style","on","e","x","y","k","classed","transition","duration","click","className","cause","setCause","law","console","log","newTuples","filter","tuple","App","basename","to","exact","component","DV2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcf84ccd.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledCard = styled.span`\r\n  width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: white;\r\n\r\n  box-shadow: 0px 0px 100px 5px #323a40;\r\n\r\n  display: ${(props) => props.dp || 'flex'};\r\n  flex-direction: ${(props) => props.fd || 'row'};\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  position: ${(props) => props.po};\r\n\r\n  font-size: ${(props) => props.fontSize || '20px'};\r\n\r\n  margin-left: ${(props) => props.margin_left};\r\n`;\r\n\r\nexport function Card({\r\n  width,\r\n  height,\r\n  children,\r\n  margin_left,\r\n  fd,\r\n  fontSize,\r\n  po,\r\n}) {\r\n  return (\r\n    <StyledCard\r\n      width={width}\r\n      height={height}\r\n      margin_left={margin_left}\r\n      fd={fd}\r\n      fontSize={fontSize}\r\n      po={po}\r\n    >\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  width: ${(props) => (props.long ? '240px' : '120px') || props.width};\r\n  height: ${(props) => (props.thick ? '50px' : '35px') || props.height};\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n\r\n  margin-top: ${(props) => props.marginTop || '10px'};\r\n  margin-bottom: ${(props) => props.marginBottom || '10px'};\r\n  margin-left: ${(props) => props.marginLeft || '10px'};\r\n  margin-right: ${(props) => props.marginRight || '10px'};\r\n  padding-top: ${(props) => props.paddingTop};\r\n  padding-bottom: ${(props) => props.paddingBottom};\r\n  padding-left: ${(props) => props.paddingLeft};\r\n  padding-right: ${(props) => props.paddingRight};\r\n\r\n  font-family: Maplestory;\r\n  font-weight: bold;\r\n  font-size: ${(props) => props.fs || '20px'};\r\n\r\n  color: ${(props) =>\r\n    (props.primary && 'white') || (props.secondary && 'black') || props.color};\r\n  background-color: ${(props) =>\r\n    (props.primary && '#960820') || (props.secondary && '#c8bdad') || props.bg};\r\n\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #960820;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default function Button(props) {\r\n  return <StyledButton {...props}>{props.children}</StyledButton>;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledContainer = styled.span`\r\n  width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n\r\n  display: flex;\r\n  flex-direction: ${(props) => props.fd || \"row\"};\r\n  align-items: center;\r\n  justify-content: ${(props) => props.jc};\r\n\r\n  font-size: ${(props) => props.fontSize || \"20px\"};\r\n\r\n  overflow: auto;\r\n\r\n  position: relative;\r\n`;\r\n\r\nexport function Container({ width, height, children, fd, jc }) {\r\n  return (\r\n    <StyledContainer width={width} height={height} fd={fd} jc={jc}>\r\n      {children}\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nexport default StyledContainer;\r\n","export default __webpack_public_path__ + \"static/media/logo.fb16eeb7.png\";","import React from 'react';\r\nimport Logo from '../Assets/Image/logo.png';\r\n\r\nexport default function Main(props) {\r\n  return <img src={Logo} alt=\"sejong logo\" width=\"300px\" height=\"300px\" />;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/2017_data.a7d2e8a6.csv\";","export default __webpack_public_path__ + \"static/media/2018_data.cf027fef.csv\";","export default __webpack_public_path__ + \"static/media/2019_data.8e981f21.csv\";","import React, { useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport data2017 from '../Assets/data/2017_data.csv';\r\nimport data2018 from '../Assets/data/2018_data.csv';\r\nimport data2019 from '../Assets/data/2019_data.csv';\r\nimport styled from 'styled-components';\r\n\r\nimport Container from '../components/Container';\r\nimport Button from '../components/Buttons';\r\n\r\nconst StyledRow1 = styled.div`\r\n  width: 540px;\r\n  height: 35px;\r\n  background-color: aquamarine;\r\n\r\n  border: 1px black solid;\r\n\r\n  font-size: 12px;\r\n\r\n  position: relative;\r\n`;\r\n\r\nconst StyledRow2 = styled.div`\r\n  width: 540px;\r\n  height: 35px;\r\n  background-color: thistle;\r\n\r\n  border: 1px black solid;\r\n\r\n  font-size: 12px;\r\n\r\n  position: relative;\r\n`;\r\n\r\nconst StyledRow3 = styled.div`\r\n  width: 540px;\r\n  height: 35px;\r\n  background-color: turquoise;\r\n\r\n  border: 1px black solid;\r\n\r\n  font-size: 12px;\r\n\r\n  position: relative;\r\n`;\r\n\r\nexport default function Data(props) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [Rows, setRows] = useState([]);\r\n  const [year, setYear] = useState();\r\n  useEffect(() => {\r\n    if (year === 2017) {\r\n      d3.csv(data2017, function (data, index) {\r\n        const see = data['발생지시도'];\r\n        const gungoo = data['발생지시군구'];\r\n        const lat = data['위도'];\r\n        const lng = data['경도'];\r\n        const bob = data['법규위반'];\r\n        Rows.push(\r\n          <StyledRow1\r\n            key={index}\r\n          >{`${see} ${gungoo} latitude: ${lat} longitude: ${lng} violation: ${bob}`}</StyledRow1>\r\n        );\r\n      }).then(() => {\r\n        setIsLoaded(true);\r\n      });\r\n    } else if (year === 2018) {\r\n      d3.csv(data2018, function (data, index) {\r\n        const see = data['발생지시도'];\r\n        const gungoo = data['발생지시군구'];\r\n        const lat = data['위도'];\r\n        const lng = data['경도'];\r\n        const bob = data['법규위반'];\r\n        Rows.push(\r\n          <StyledRow2\r\n            key={index}\r\n          >{`${see} ${gungoo} latitude: ${lat} longitude: ${lng} violation: ${bob}`}</StyledRow2>\r\n        );\r\n      }).then(() => {\r\n        setIsLoaded(true);\r\n      });\r\n    } else if (year === 2019) {\r\n      d3.csv(data2019, function (data, index) {\r\n        const see = data['발생지시도'];\r\n        const gungoo = data['발생지시군구'];\r\n        const lat = data['위도'];\r\n        const lng = data['경도'];\r\n        const bob = data['가해자법규위반'];\r\n        Rows.push(\r\n          <StyledRow3\r\n            key={index}\r\n          >{`${see} ${gungoo} latitude: ${lat} longitude: ${lng} violation: ${bob}`}</StyledRow3>\r\n        );\r\n      }).then(() => {\r\n        setIsLoaded(true);\r\n      });\r\n    } else {\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [year]);\r\n  return (\r\n    <Container fd=\"column\">\r\n      <Container>\r\n        <Button\r\n          secondary\r\n          onClick={() => {\r\n            if (year !== 2017) {\r\n              setIsLoaded(false);\r\n              setRows([]);\r\n              setYear(2017);\r\n            }\r\n          }}\r\n        >\r\n          2017\r\n        </Button>\r\n        <Button\r\n          secondary\r\n          onClick={() => {\r\n            if (year !== 2018) {\r\n              setIsLoaded(false);\r\n              setRows([]);\r\n              setYear(0);\r\n              setYear(2018);\r\n            }\r\n          }}\r\n        >\r\n          2018\r\n        </Button>\r\n        <Button\r\n          secondary\r\n          onClick={() => {\r\n            if (year !== 2019) {\r\n              setIsLoaded(false);\r\n              setRows([]);\r\n              setYear(0);\r\n              setYear(2019);\r\n            }\r\n          }}\r\n        >\r\n          2019\r\n        </Button>\r\n      </Container>\r\n      <Container fd=\"column\" width=\"580px\" height=\"520px\">\r\n        {isLoaded ? Rows : null}\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/All_data.8b422d11.csv\";","import React, { useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson';\r\nimport koreaMap from '../Assets/data/seoul_municipalities_topo_simple.json';\r\nimport './map.css';\r\nimport Button from '../components/Buttons';\r\nimport Container from '../components/Container';\r\n\r\nimport data2017 from '../Assets/data/2017_data.csv';\r\nimport data2018 from '../Assets/data/2018_data.csv';\r\nimport data2019 from '../Assets/data/2019_data.csv';\r\nimport dataAll from '../Assets/data/All_data.csv';\r\n\r\nexport default function Dv1(props) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [Rows, setRows] = useState([]);\r\n  const [year, setYear] = useState(100);\r\n  function load_data(year) {\r\n    const tuples = [];\r\n    if (year === 2017) {\r\n      d3.csv(data2017, function (data) {\r\n        const lat = Number(data['위도']);\r\n        const lng = Number(data['경도']);\r\n        tuples.push([lat, lng]);\r\n      }).then(() => {\r\n        setRows(tuples);\r\n        setIsLoaded(true);\r\n      });\r\n    } else if (year === 2018) {\r\n      d3.csv(data2018, function (data) {\r\n        const lat = Number(data['위도']);\r\n        const lng = Number(data['경도']);\r\n        tuples.push([lat, lng]);\r\n      }).then(() => {\r\n        setRows(tuples);\r\n        setIsLoaded(true);\r\n      });\r\n    } else if (year === 2019) {\r\n      d3.csv(data2019, function (data) {\r\n        const lat = Number(data['위도']);\r\n        const lng = Number(data['경도']);\r\n        tuples.push([lat, lng]);\r\n      }).then(() => {\r\n        setRows(tuples);\r\n        setIsLoaded(true);\r\n      });\r\n    } else {\r\n      d3.csv(dataAll, function (data) {\r\n        const lat = Number(data['위도']);\r\n        const lng = Number(data['경도']);\r\n        tuples.push([lat, lng]);\r\n      }).then(() => {\r\n        setRows(tuples);\r\n        setIsLoaded(true);\r\n      });\r\n    }\r\n    return tuples;\r\n  }\r\n  useEffect(() => {\r\n    load_data(year);\r\n  }, [year]);\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      d3.select('svg').remove();\r\n      const projection = d3.geoMercator().scale(1).translate([0, 0]);\r\n      const path = d3.geoPath().projection(projection);\r\n      const geojson = topojson.feature(\r\n        koreaMap,\r\n        koreaMap.objects.seoul_municipalities_geo\r\n      );\r\n      const width = 500;\r\n      const height = 500;\r\n      const svg = d3\r\n        .select('.d3')\r\n        .append('svg')\r\n        .attr('width', width)\r\n        .attr('height', height)\r\n        .attr('class', 'map');\r\n      const feature = svg.append('g');\r\n      const circles = svg.append('g');\r\n      const labels = svg.append('g');\r\n      const bounds = path.bounds(geojson);\r\n      const widthScale = (bounds[1][0] - bounds[0][0]) / width;\r\n      const heightScale = (bounds[1][1] - bounds[0][1]) / height;\r\n      const scale = 1 / Math.max(widthScale, heightScale);\r\n      const xoffset = width / 2 - (scale * (bounds[1][0] + bounds[0][0])) / 2;\r\n      const yoffset = height / 2 - (scale * (bounds[1][1] + bounds[0][1])) / 2;\r\n      const offset = [xoffset, yoffset];\r\n      let centered;\r\n      projection.scale(scale).translate(offset);\r\n\r\n      labels\r\n        .attr('class', 'label')\r\n        .selectAll('.labels')\r\n        .data(geojson.features)\r\n        .enter()\r\n        .append('text')\r\n        .attr('transform', function (d) {\r\n          return 'translate(' + path.centroid(d) + ')';\r\n        })\r\n        .text((d) => {\r\n          return d.properties.SIG_KOR_NM;\r\n        })\r\n        .style('text-anchor', 'middle');\r\n      circles\r\n        .attr('class', 'circle')\r\n        .selectAll('.circles')\r\n        .data(Rows)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('cx', function (d) {\r\n          return projection([d[1], d[0]])[0];\r\n        })\r\n        .attr('cy', function (d) {\r\n          return projection([d[1], d[0]])[1];\r\n        })\r\n        .attr('r', 2)\r\n        .attr('fill', '#B00000')\r\n        .attr('opacity', 0.8);\r\n      feature\r\n        .selectAll('path')\r\n        .data(geojson.features)\r\n        .enter()\r\n        .append('path')\r\n        .attr('class', function (d) {\r\n          return d.properties.SIG_KOR_NM;\r\n        })\r\n        .attr('d', path)\r\n        .on('click', function (e, d) {\r\n          click(d);\r\n        });\r\n      function click(d) {\r\n        let x, y, k;\r\n        if (d && centered !== d) {\r\n          var centroid = path.centroid(d);\r\n          k = 2;\r\n          x = centroid[0] - width / 4;\r\n          y = centroid[1] - height / 4;\r\n          centered = d;\r\n        } else {\r\n          x = 0;\r\n          y = 0;\r\n          k = 1;\r\n          centered = null;\r\n        }\r\n        feature.selectAll('path').classed(\r\n          'active',\r\n          centered &&\r\n            function (d) {\r\n              return d === centered;\r\n            }\r\n        );\r\n        feature\r\n          .transition()\r\n          .duration(750)\r\n          .attr(\r\n            'transform',\r\n            'scale(' + k + ')translate(' + -x + ',' + -y + ')'\r\n          );\r\n        circles\r\n          .transition()\r\n          .duration(750)\r\n          .attr(\r\n            'transform',\r\n            'scale(' + k + ')translate(' + -x + ',' + -y + ')'\r\n          );\r\n        labels\r\n          .transition()\r\n          .duration(750)\r\n          .attr(\r\n            'transform',\r\n            'scale(' + k + ')translate(' + -x + ',' + -y + ')'\r\n          );\r\n      }\r\n    }\r\n  }, [isLoaded]);\r\n  return (\r\n    <Container>\r\n      <Container fd=\"column\">\r\n        <Container>\r\n          <Button\r\n            className=\"year\"\r\n            secondary\r\n            onClick={() => {\r\n              if (year !== 100) {\r\n                setIsLoaded(false);\r\n                setRows([]);\r\n                setYear(100);\r\n              }\r\n            }}\r\n          >\r\n            ALL\r\n          </Button>\r\n          <Button\r\n            className=\"year\"\r\n            secondary\r\n            onClick={() => {\r\n              if (year !== 2017) {\r\n                setIsLoaded(false);\r\n                setRows([]);\r\n                setYear(2017);\r\n              }\r\n            }}\r\n          >\r\n            2017\r\n          </Button>\r\n          <Button\r\n            className=\"year\"\r\n            secondary\r\n            onClick={() => {\r\n              if (year !== 2018) {\r\n                setIsLoaded(false);\r\n                setRows([]);\r\n                setYear(0);\r\n                setYear(2018);\r\n              }\r\n            }}\r\n          >\r\n            2018\r\n          </Button>\r\n          <Button\r\n            className=\"year\"\r\n            secondary\r\n            onClick={() => {\r\n              if (year !== 2019) {\r\n                setIsLoaded(false);\r\n                setRows([]);\r\n                setYear(0);\r\n                setYear(2019);\r\n              }\r\n            }}\r\n          >\r\n            2019\r\n          </Button>\r\n        </Container>\r\n        <h3>{`${\r\n          year === 100 ? '2017-2019년' : `${year}년`\r\n        } 사망 교통사고 발생 위치`}</h3>\r\n        <div className=\"d3\"></div>\r\n      </Container>\r\n\r\n      {/* <div>선택된 구: {goo}</div>\r\n      <div style={{ marginTop: '20px' }}>사망 교통사고 수: {casulty}</div>\r\n      <div style={{ marginTop: '20px' }}>사망자 수 : {casulty}</div> */}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson';\r\nimport koreaMap from '../Assets/data/seoul_municipalities_topo_simple.json';\r\nimport './map.css';\r\nimport Button from '../components/Buttons';\r\nimport Container from '../components/Container';\r\n\r\nimport dataAll from '../Assets/data/All_data.csv';\r\n\r\nexport default function Dv1(props) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [Rows, setRows] = useState([]);\r\n  const [cause, setCause] = useState('과속');\r\n  function load_data() {\r\n    const tuples = [];\r\n    d3.csv(dataAll, function (data) {\r\n      const lat = Number(data['위도']);\r\n      const lng = Number(data['경도']);\r\n      const law = data['법규위반'];\r\n      tuples.push([lat, lng, law]);\r\n    }).then(() => {\r\n      console.log(tuples);\r\n      const newTuples = tuples.filter((tuple) => {\r\n        return tuple[2] === cause;\r\n      });\r\n      setRows(newTuples);\r\n      setIsLoaded(true);\r\n    });\r\n    return tuples;\r\n  }\r\n  useEffect(() => {\r\n    load_data();\r\n  }, [cause]);\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      d3.select('svg').remove();\r\n      const projection = d3.geoMercator().scale(1).translate([0, 0]);\r\n      const path = d3.geoPath().projection(projection);\r\n      const geojson = topojson.feature(\r\n        koreaMap,\r\n        koreaMap.objects.seoul_municipalities_geo\r\n      );\r\n      const width = 500;\r\n      const height = 500;\r\n      const svg = d3\r\n        .select('.d3')\r\n        .append('svg')\r\n        .attr('width', width)\r\n        .attr('height', height)\r\n        .attr('class', 'map');\r\n      const feature = svg.append('g');\r\n      const circles = svg.append('g');\r\n      const labels = svg.append('g');\r\n      const bounds = path.bounds(geojson);\r\n      const widthScale = (bounds[1][0] - bounds[0][0]) / width;\r\n      const heightScale = (bounds[1][1] - bounds[0][1]) / height;\r\n      const scale = 1 / Math.max(widthScale, heightScale);\r\n      const xoffset = width / 2 - (scale * (bounds[1][0] + bounds[0][0])) / 2;\r\n      const yoffset = height / 2 - (scale * (bounds[1][1] + bounds[0][1])) / 2;\r\n      const offset = [xoffset, yoffset];\r\n      let centered;\r\n      projection.scale(scale).translate(offset);\r\n\r\n      labels\r\n        .attr('class', 'label')\r\n        .selectAll('.labels')\r\n        .data(geojson.features)\r\n        .enter()\r\n        .append('text')\r\n        .attr('transform', function (d) {\r\n          return 'translate(' + path.centroid(d) + ')';\r\n        })\r\n        .text((d) => {\r\n          return d.properties.SIG_KOR_NM;\r\n        })\r\n        .style('text-anchor', 'middle');\r\n      circles\r\n        .attr('class', 'circle')\r\n        .selectAll('.circles')\r\n        .data(Rows)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('cx', function (d) {\r\n          return projection([d[1], d[0]])[0];\r\n        })\r\n        .attr('cy', function (d) {\r\n          return projection([d[1], d[0]])[1];\r\n        })\r\n        .attr('r', 2)\r\n        .attr('fill', '#B00000')\r\n        .attr('opacity', 0.8);\r\n      feature\r\n        .selectAll('path')\r\n        .data(geojson.features)\r\n        .enter()\r\n        .append('path')\r\n        .attr('class', function (d) {\r\n          return d.properties.SIG_KOR_NM;\r\n        })\r\n        .attr('d', path)\r\n        .on('click', function (e, d) {\r\n          click(d);\r\n        });\r\n      function click(d) {\r\n        let x, y, k;\r\n        if (d && centered !== d) {\r\n          var centroid = path.centroid(d);\r\n          k = 2;\r\n          x = centroid[0] - width / 4;\r\n          y = centroid[1] - height / 4;\r\n          centered = d;\r\n        } else {\r\n          x = 0;\r\n          y = 0;\r\n          k = 1;\r\n          centered = null;\r\n        }\r\n        feature.selectAll('path').classed(\r\n          'active',\r\n          centered &&\r\n            function (d) {\r\n              return d === centered;\r\n            }\r\n        );\r\n        feature\r\n          .transition()\r\n          .duration(750)\r\n          .attr(\r\n            'transform',\r\n            'scale(' + k + ')translate(' + -x + ',' + -y + ')'\r\n          );\r\n        circles\r\n          .transition()\r\n          .duration(750)\r\n          .attr(\r\n            'transform',\r\n            'scale(' + k + ')translate(' + -x + ',' + -y + ')'\r\n          );\r\n        labels\r\n          .transition()\r\n          .duration(750)\r\n          .attr(\r\n            'transform',\r\n            'scale(' + k + ')translate(' + -x + ',' + -y + ')'\r\n          );\r\n      }\r\n    }\r\n  }, [isLoaded]);\r\n  return (\r\n    <Container>\r\n      <Container fd=\"column\">\r\n        <Container>\r\n          <Button\r\n            className=\"year\"\r\n            secondary\r\n            onClick={() => {\r\n              if (cause !== '과속') {\r\n                setIsLoaded(false);\r\n                setRows([]);\r\n                setCause('과속');\r\n              }\r\n            }}\r\n          >\r\n            과속\r\n          </Button>\r\n          <Button\r\n            className=\"year\"\r\n            secondary\r\n            fs=\"14px\"\r\n            onClick={() => {\r\n              if (cause !== '안전운전 의무 불이행') {\r\n                setIsLoaded(false);\r\n                setRows([]);\r\n                setCause('안전운전 의무 불이행');\r\n              }\r\n            }}\r\n          >\r\n            안전운전 의무 불이행\r\n          </Button>\r\n          <Button\r\n            className=\"year\"\r\n            secondary\r\n            onClick={() => {\r\n              if (cause !== '신호위반') {\r\n                setIsLoaded(false);\r\n                setRows([]);\r\n                setCause('신호위반');\r\n              }\r\n            }}\r\n          >\r\n            신호위반\r\n          </Button>\r\n          <Button\r\n            className=\"year\"\r\n            secondary\r\n            onClick={() => {\r\n              if (cause !== '중앙선침범') {\r\n                setIsLoaded(false);\r\n                setRows([]);\r\n                setCause('중앙선 침범');\r\n              }\r\n            }}\r\n          >\r\n            중앙선침범\r\n          </Button>\r\n        </Container>\r\n        <h3>원인별 사망 교통사고 분류 ({cause})</h3>\r\n        <div className=\"d3\"></div>\r\n      </Container>\r\n\r\n      {/* <div>선택된 구: {goo}</div>\r\n      <div style={{ marginTop: '20px' }}>사망 교통사고 수: {casulty}</div>\r\n      <div style={{ marginTop: '20px' }}>사망자 수 : {casulty}</div> */}\r\n    </Container>\r\n  );\r\n}\r\n","import './App.css';\r\nimport Card from './components/Card';\r\nimport Button from './components/Buttons';\r\nimport Container from './components/Container';\r\n\r\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\r\n\r\nimport Main from './Routes/Main';\r\nimport Data from './Routes/Data';\r\nimport DV1 from './Routes/DV1';\r\nimport DV2 from './Routes/DV2';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container width=\"1600px\" height=\"900px\" jc=\"center\">\r\n      <BrowserRouter basename=\"/DV_Final\">\r\n        <Card width=\"200px\" height=\"600px\" fd=\"column\">\r\n          <Link to=\"/data\">\r\n            <Button primary thick>\r\n              데이터\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/dv1\">\r\n            <Button primary thick>\r\n              시각화 1\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/dv2\">\r\n            <Button primary thick>\r\n              시각화 2\r\n            </Button>\r\n          </Link>\r\n        </Card>\r\n        <Card width=\"600px\" height=\"600px\" margin_left=\"50px\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Main}></Route>\r\n            <Route path=\"/data\" component={Data}></Route>\r\n            <Route\r\n              path=\"/dv1\"\r\n              component={() => {\r\n                return <DV1 />;\r\n              }}\r\n            ></Route>\r\n            <Route path=\"/dv2\" component={DV2}></Route>\r\n          </Switch>\r\n        </Card>\r\n      </BrowserRouter>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}